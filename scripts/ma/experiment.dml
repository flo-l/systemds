#------------------------------------------------------------- #
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file # distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file # to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance # with the License.  You may obtain a copy of the License at #
#	http://www.apache.org/licenses/LICENSE-2.0 #
# Unless required by applicable law or agreed to in writing, # software distributed under the License is distributed on an # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the # specific language governing permissions and limitations
# under the License. #
#-------------------------------------------------------------
source("src/test/scripts/functions/federated/paramserv/CNN.dml") as CNN 

# Read training data & settings
fmt = ifdef($fmt, "csv")
train = read($train, format=fmt)
test = read($test, format=fmt)
C = $C
Hin = $Hin
Win = $Win
epochs = ifdef($epochs, 1)
out_dir = ifdef($out_dir, ".")
seed = ifdef($seed, 42)
batch_size = ifdef($batch_size, 64)
num_workers = ifdef($num_workers, 10)
eta = ifdef($eta, 0.1)
runtime_balancing = "none"
weighting = "no"

# Extract images and labels
images = train[,2:ncol(train)]
labels = train[,1]
X_test = test[,2:ncol(test)]
Y_test = test[,1]

# Scale images to [-1,1], and one-hot encode the labels
n = nrow(train)
n_test = nrow(test)
images = (images / 255.0) * 2 - 1
labels = table(seq(1, n), labels+1, n, 10)
X_test = (X_test / 255.0) * 2 - 1
Y_test = table(seq(1, n_test), Y_test+1, n_test, 10)

# Split into training (30,000 examples) and validation (30,000 examples)
X = images[30001:nrow(images),]
X_val = images[1:30000,]
Y = labels[30001:nrow(images),]
Y_val = labels[1:30000,]

# TODO: make matrices federated

# train model
model = CNN::train_paramserv(X, Y, X_val, Y_val, num_workers, epochs, "BSP", "EPOCH", batch_size, "DISJOINT_CONTIGUOUS", runtime_balancing, weighting, eta, C, Hin, Win, seed)

# Compute test loss & accuracy
hyperparams = list(learning_rate=eta, C=C, Hin=Hin, Win=Win)
[loss_test, accuracy_test] = CNN::validate(X_test, Y_test, model, hyperparams) print("[+] test loss: " + loss_test + ", test accuracy: " + accuracy_test + "\n")
